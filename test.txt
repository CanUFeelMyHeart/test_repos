# Работа с репозиториями GitHub

3333333

333333


3333333

##  Изучаем основные команды GIT

Для того чтобы создать пустой репозиторий, используется команда:

> git init

Для получения информации о статусе GIT используется команда:

> git status

Чтобы начать сохранение файла с именем file_name, нужно:

> git add file_name - начинает сохранение file_name.

> git add . - начинает сохранять все файлы в текущей папке.

Для создания коммита к файлу используется команд:

> git commit -m "Message"

Разница между текущим файлом и закоммиченным файлом:

> git diff
Чтобы посмотреть все ветки в репозитории, используется команда:

> git branch

Для создания новой ветки в репозитории используется команда:

> git branch branch_name
Чтобы вернуться к какому-то изменению:

> git checkout <хэш код>
> git checkout master (вернуться в рабочую версию)
Выводит журнал всех коммитов:

> + git log - выводит коммиты

> + git log --graph - выводит коммиты с визуализацией

## Новые команды:
+ git commit -a -m "message - сохраняем файл и коммит
* git checkout -b branch_name - создаем новую ветку и переходим в неё.

Чтобы удалить ветку с  **замержеными** изменениями:
1. git branch -d branch_info

Чтобы удалить ветку с **не замерженными** изменениями:

2. git branch -D branch_info

## Работа с Github

git clone <url-адрес репозитория> – клонирование внешнего репозитория на  локальный ПК

1. **git pull** – получение изменений и слияние с локальной версией
2. **git push** – отправляет локальную версию репозитория на внешний


