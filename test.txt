# Инструкция по работе с Git #
====================================
![философия и жизнь](herodot.jpg)
> "Обычно 
>> люди видят во сне то,
>>> о чём они думают днём"

                        Геродот

+ *будет очень интересно*
+ *будет очень полезно*
+ *будет очень наглядно*

>***Итак, поехали!***

### Для того, чтобы создать пустой репозиторий, нужно: ###

> git init
---
### Чтобы начать сохранение файла с именем file_name, нужно: ###
> git add file_name или git add .
---
### Создание коммита: (комментарий для программистов) ###
> git commit -m message "your text"
---
### Журналл всех коммитов: ###
> git log
---
### Чтобы вернуться к какому-то коммиту, нужно: ###
> git checkout <хэш_код>

> git checkout master (вернуться к последней версии)
---
### Чтобы увидеть разницу между текущим и закомиченным файлом нужно: ###

> git diff
---
### Чтобы вывести все ветки на экран, мы используем команду:
> git branch
---
### Чтобы создать новую ветку, мы используем команду:
* git branche branche_name

Новые команды:
+ git commit -a -m "message" - сохранение **текущего** файла и коммит
* git checkout -b branche_name - создание и переход к ветке с именем branch_name
---
### Чтобы перейти к другой ветке, мы используем:
* git checkout <название ветки>
---
### Чтобы удалить ветку с **замерженными изменениями**, мы используем:  
+ git branch -d branch_info
### Чтобы удалить ветку с **не замерженными изменениями**, мы используем:  
* git branch -D branch_info
---
### Чтобы получить справочную информацию (подсказку), мы используем:
> **git help** (набрав команду мы получим краткую информацию, которая поможет любому новичку начать работать)
---
### Чтобы скрыть определенные файлы и папки, которые не желательно отображать "публично", либо которые носят конфиденциальный характер, нужно:
1. в проводнике GIT создать файл .gitignore
2. и уже, затем можно прописывать в файле .gitignore, текстовое (можно указывать различные расширения файлов, задавать начальное имя файлов и т.д.) наименование файлов (различные ссылки, тексты, например строки подключения к БД, пароли и т.д.) которые мы хотелибы скрыть от глаз пользователей, например: 123.txt, 123.jpg, *.jpg, *.txt и т.д.
### Чтобы выполнить слияние в git, нужно: 
> 1. + находясь в ветке в которую необходимо слить информацию, набрать команду **git merge** указав имя ветки с которой нам необходимо слить информацию, например:
> 1. + Пример: git merge <название ветки>
### Чтобы показать изменения внесенные отдельным коммитом, нужно:
> + набрать комманду  **git show**  
---
> ***Далее мы узнаем:***
![Далее мы узнаем](ok.jpeg)
[github]: [https://github.com/]
---
### Чтобы выполнить клонирование внешнего репозитория на  локальный ПК, нужно набрать комманду:
> git clone <url-адрес репозитория>
---
### Чтобы сделать получение изменений и слияние с локальной версией, нужно выполнить комманду:
> git pull
---
### Для того чтобы отправить локальную версию репозитория на внешний, нужно выполнить комманду:
> git push 
---
**go to Mikhail**
---